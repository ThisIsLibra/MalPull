/*
 * Copyright (C) 2020 Max 'Libra' Kersten [@Libranalysis, https://maxkersten.nl]
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package malpull.endpoints;

import malpull.exceptions.SampleNotFoundException;
import java.io.IOException;
import malwarebazaarapi.MalwareBazaarApi;

/**
 * This class is used to get a sample from the MalwareBazaar database via its
 * API.
 *
 * @author Max 'Libra' Kersten [@Libranalysis, https://maxkersten.nl]
 */
public class MalwareBazaar implements IEndpoint {

    /**
     * The instance of the Malware Bazaar API client
     */
    private MalwareBazaarApi api;
    
    /**
     * Creates an object to interact with the MalwareBazaar API
     *
     */
    public MalwareBazaar() {
        api = new MalwareBazaarApi("");
    }
    
    /**
     * Gets the endpoint name
     *
     * @return the name of the endpoint
     */
    @Override
    public String getName() {
        return "MalwareBazaar";
    }

    /**
     * Gets the sample from MalwareBazaar, if it is present. Throws an exception
     * if it is not present.
     *
     * @param hash the hash to look for
     * @return the sample as a byte array
     * @throws SampleNotFoundException if the sample cannot be found
     */
    @Override
    public byte[] getSample(String hash) throws SampleNotFoundException {
        try {
            //Get the SHA-256 hash via the search function of the API, as only SHA-256 hashes can be used when downloading a sample
            String sha256Hash = api.querySample(hash).getSha256();
            //If it cannot be found, there is no such sample
            if (sha256Hash.isEmpty()) {
                throw new SampleNotFoundException("Sample " + hash + " not found on MalwareBazaar!");
            }
            //If the sample exists, download it
            return api.download(sha256Hash);
        } catch (IOException e) {
            throw new SampleNotFoundException("Something went wrong when searching for the sample on MalwareBazaar and/or when handling the file in the temporary files folder");
        }
    }
}
